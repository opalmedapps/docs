name: ci

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  merge_group:

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: astral-sh/setup-uv@v5.3.1
        id: setup-uv
        with:
          # renovate: datasource=pypi dependency=uv
          version: "0.5.25"
          # ubuntu-latest already has Python 3.x installed (pip is needed by the pre-commit action)
      - name: Print the installed versions
        run: |
          uv python install
          echo "Installed uv version is ${{ steps.setup-uv.outputs.uv-version }}"
          echo "Installed Python version is $(python --version)"
          uv python list
      - uses: mschoettle/pre-commit-action@v4.0.2
        env:
          SKIP: markdownlint-cli2

  markdownlint:
    permissions:
      contents: read
      # required for upload-sarif action
      # https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github#example-workflow-for-sarif-files-generated-outside-of-a-repository
      security-events: write

    uses: opalmedapps/.github/.github/workflows/markdownlint.yaml@main
    with:
      semantic-linebreak: true

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          # fetch the full git history to be able to determine creation dates for pages
          # see: https://github.com/timvink/mkdocs-git-revision-date-localized-plugin?tab=readme-ov-file#note-when-using-build-environments
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5.3.1
        id: setup-uv
        with:
          # renovate: datasource=pypi dependency=uv
          version: "0.5.25"
          python-version: 3.13
      - name: Print the installed versions
        run: |
          echo "Installed uv version is ${{ steps.setup-uv.outputs.uv-version }}"
          echo "Installed Python version is $(python --version)"
          uv python list
      - name: Install dependencies
        run: uv pip install -r requirements.txt
      - uses: actions/cache@v4.2.2
        with:
          # weekly cache
          key: mkdocs-material-$(date --utc '+%V')
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Build site
        run: mkdocs build --strict
